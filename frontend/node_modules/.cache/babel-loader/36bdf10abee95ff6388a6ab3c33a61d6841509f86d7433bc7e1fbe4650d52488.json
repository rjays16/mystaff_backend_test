{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from \"../../../AuthService\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"RegisterForm\",\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isLoading: false\n    };\n  },\n  methods: {\n    async register() {\n      if (this.password !== this.confirmPassword) {\n        Swal.fire({\n          title: \"Error!\",\n          text: \"Passwords do not match\",\n          icon: \"error\",\n          confirmButtonText: \"OK\"\n        });\n        return;\n      }\n      this.isLoading = true;\n      try {\n        await AuthService.register({\n          name: this.name,\n          email: this.email,\n          password: this.password\n        });\n        this.$router.push(\"/login\");\n        Swal.fire({\n          title: \"Success!\",\n          text: \"Registration successful\",\n          icon: \"success\",\n          confirmButtonText: \"OK\"\n        });\n      } catch (error) {\n        Swal.fire({\n          title: \"Error!\",\n          text: error.response?.data?.message || \"Failed to register\",\n          icon: \"error\",\n          confirmButtonText: \"OK\"\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["AuthService","Swal","name","data","email","password","confirmPassword","isLoading","methods","register","fire","title","text","icon","confirmButtonText","$router","push","error","response","message"],"sources":["C:\\xampp\\htdocs\\mystaff_backend_test\\frontend\\src\\components\\User\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <div class=\"register-form\">\r\n      <h2>Register</h2>\r\n      <b-form @submit.prevent=\"register\">\r\n        <b-form-group label=\"Name\" label-for=\"name\">\r\n          <b-form-input\r\n              id=\"name\"\r\n              v-model=\"name\"\r\n              type=\"text\"\r\n              required\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group label=\"Email\" label-for=\"email\">\r\n          <b-form-input\r\n              id=\"email\"\r\n              v-model=\"email\"\r\n              type=\"email\"\r\n              required\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group label=\"Password\" label-for=\"password\">\r\n          <b-form-input\r\n              id=\"password\"\r\n              v-model=\"password\"\r\n              type=\"password\"\r\n              required\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group label=\"Confirm Password\" label-for=\"confirmPassword\">\r\n          <b-form-input\r\n              id=\"confirmPassword\"\r\n              v-model=\"confirmPassword\"\r\n              type=\"password\"\r\n              required\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            :disabled=\"isLoading\"\r\n            class=\"submit-button\"\r\n        >\r\n          <b-spinner v-if=\"isLoading\" small></b-spinner>\r\n          Register\r\n        </b-button>\r\n        <div class=\"login-link\">\r\n          <router-link to=\"/login\">Already have an account? Login here</router-link>\r\n        </div>\r\n      </b-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AuthService from \"../../../AuthService\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  name: \"RegisterForm\",\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      isLoading: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async register() {\r\n      if (this.password !== this.confirmPassword) {\r\n        Swal.fire({\r\n          title: \"Error!\",\r\n          text: \"Passwords do not match\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.isLoading = true;\r\n\r\n      try {\r\n        await AuthService.register({\r\n          name: this.name,\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n        this.$router.push(\"/login\");\r\n        Swal.fire({\r\n          title: \"Success!\",\r\n          text: \"Registration successful\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: \"Error!\",\r\n          text: error.response?.data?.message || \"Failed to register\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.register-form {\r\n  max-width: 400px;\r\n  width: 100%;\r\n  padding: 40px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.submit-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>"],"mappings":";AA2DA,OAAOA,WAAU,MAAO,sBAAsB;AAC9C,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLD,IAAI,EAAE,EAAE;MACRE,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,IAAI,CAACJ,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1CL,IAAI,CAACS,IAAI,CAAC;UACRC,KAAK,EAAE,QAAQ;UACfC,IAAI,EAAE,wBAAwB;UAC9BC,IAAI,EAAE,OAAO;UACbC,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACF;MACF;MAEA,IAAI,CAACP,SAAQ,GAAI,IAAI;MAErB,IAAI;QACF,MAAMP,WAAW,CAACS,QAAQ,CAAC;UACzBP,IAAI,EAAE,IAAI,CAACA,IAAI;UACfE,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,IAAI,CAACU,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3Bf,IAAI,CAACS,IAAI,CAAC;UACRC,KAAK,EAAE,UAAU;UACjBC,IAAI,EAAE,yBAAyB;UAC/BC,IAAI,EAAE,SAAS;UACfC,iBAAiB,EAAE;QACrB,CAAC,CAAC;MACJ,EAAE,OAAOG,KAAK,EAAE;QACdhB,IAAI,CAACS,IAAI,CAAC;UACRC,KAAK,EAAE,QAAQ;UACfC,IAAI,EAAEK,KAAK,CAACC,QAAQ,EAAEf,IAAI,EAAEgB,OAAM,IAAK,oBAAoB;UAC3DN,IAAI,EAAE,OAAO;UACbC,iBAAiB,EAAE;QACrB,CAAC,CAAC;MACJ,UAAU;QACR,IAAI,CAACP,SAAQ,GAAI,KAAK;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-55c5fbb5\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Login\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_form_input = _resolveComponent(\"b-form-input\");\n  const _component_b_form_group = _resolveComponent(\"b-form-group\");\n  const _component_b_spinner = _resolveComponent(\"b-spinner\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_b_form = _resolveComponent(\"b-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_b_form, {\n    onSubmit: _withModifiers($options.login, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_form_group, {\n      label: \"Email\",\n      \"label-for\": \"email\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_form_input, {\n        id: \"email\",\n        modelValue: $data.email,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n        type: \"email\",\n        required: \"\",\n        state: $options.emailState\n      }, {\n        \"invalid-feedback\": _withCtx(() => [_createTextVNode(\" Please enter a valid email address. \")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"state\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_b_form_group, {\n      label: \"Password\",\n      \"label-for\": \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_form_input, {\n        id: \"password\",\n        modelValue: $data.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n        type: \"password\",\n        required: \"\",\n        state: $options.passwordState\n      }, {\n        \"invalid-feedback\": _withCtx(() => [_createTextVNode(\" Password must be at least 8 characters long. \")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"state\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_b_button, {\n      type: \"submit\",\n      variant: \"primary\",\n      disabled: $data.isLoading\n    }, {\n      default: _withCtx(() => [$data.isLoading ? (_openBlock(), _createBlock(_component_b_spinner, {\n        key: 0,\n        small: \"\"\n      })) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" Login \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"disabled\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onSubmit\"])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_b_form","onSubmit","_withModifiers","$options","login","default","_withCtx","_component_b_form_group","label","_component_b_form_input","id","modelValue","$data","email","_cache","$event","type","required","state","emailState","_createTextVNode","_","password","passwordState","_component_b_button","variant","disabled","isLoading","_createBlock","_component_b_spinner","key","small","_createCommentVNode"],"sources":["C:\\xampp\\htdocs\\assessment_test\\ui\\src\\components\\User\\Login.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Login</h2>\r\n    <b-form @submit.prevent=\"login\">\r\n      <b-form-group label=\"Email\" label-for=\"email\">\r\n        <b-form-input\r\n            id=\"email\"\r\n            v-model=\"email\"\r\n            type=\"email\"\r\n            required\r\n            :state=\"emailState\"\r\n        >\r\n          <template #invalid-feedback>\r\n            Please enter a valid email address.\r\n          </template>\r\n        </b-form-input>\r\n      </b-form-group>\r\n\r\n      <b-form-group label=\"Password\" label-for=\"password\">\r\n        <b-form-input\r\n            id=\"password\"\r\n            v-model=\"password\"\r\n            type=\"password\"\r\n            required\r\n            :state=\"passwordState\"\r\n        >\r\n          <template #invalid-feedback>\r\n            Password must be at least 8 characters long.\r\n          </template>\r\n        </b-form-input>\r\n      </b-form-group>\r\n\r\n      <b-button type=\"submit\" variant=\"primary\" :disabled=\"isLoading\">\r\n        <b-spinner v-if=\"isLoading\" small></b-spinner>\r\n        Login\r\n      </b-button>\r\n    </b-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AuthService from \"../../../AuthService\";\r\n\r\nexport default {\r\n  name: 'LoginForm',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      isLoading: false,\r\n    }\r\n  },\r\n  computed: {\r\n    emailState() {\r\n      return this.email.includes('@') ? true : false\r\n    },\r\n    passwordState() {\r\n      return this.password.length >= 8 ? true : false\r\n    },\r\n  },\r\n  methods: {\r\n    async login() {\r\n      if (!this.emailState || !this.passwordState) {\r\n        return\r\n      }\r\n\r\n      this.isLoading = true\r\n\r\n      try {\r\n        const { access_token } = await AuthService.login({\r\n          email: this.email,\r\n          password: this.password,\r\n        })\r\n        AuthService.setToken(access_token)\r\n         this.$router.push('/')\r\n      } catch (error) {\r\n        console.error('Error logging in:', error)\r\n        console.log(\"incorrect\")\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-form {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-control {\r\n  width: 100%;\r\n}\r\n\r\n.submit-button {\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAAc,YAAV,OAAK;;;;;;;uBADXC,mBAAA,CAoCM,cAnCJC,UAAc,EACdC,YAAA,CAiCSC,iBAAA;IAjCAC,QAAM,EAHnBC,cAAA,CAG6BC,QAAA,CAAAC,KAAK;;IAHlCC,OAAA,EAAAC,QAAA,CAIM,MAYe,CAZfP,YAAA,CAYeQ,uBAAA;MAZDC,KAAK,EAAC,OAAO;MAAC,WAAS,EAAC;;MAJ5CH,OAAA,EAAAC,QAAA,CAKQ,MAUe,CAVfP,YAAA,CAUeU,uBAAA;QATXC,EAAE,EAAC,OAAO;QANtBC,UAAA,EAOqBC,KAAA,CAAAC,KAAK;QAP1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOqBH,KAAA,CAAAC,KAAK,GAAAE,MAAA;QACdC,IAAI,EAAC,OAAO;QACZC,QAAQ,EAAR,EAAQ;QACPC,KAAK,EAAEf,QAAA,CAAAgB;;QAEC,kBAAgB,EAAAb,QAAA,CAAC,MAE5B,CAdVc,gBAAA,CAYsC,uCAE5B,E;QAdVC,CAAA;;MAAAA,CAAA;QAkBMtB,YAAA,CAYeQ,uBAAA;MAZDC,KAAK,EAAC,UAAU;MAAC,WAAS,EAAC;;MAlB/CH,OAAA,EAAAC,QAAA,CAmBQ,MAUe,CAVfP,YAAA,CAUeU,uBAAA;QATXC,EAAE,EAAC,UAAU;QApBzBC,UAAA,EAqBqBC,KAAA,CAAAU,QAAQ;QArB7B,uBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqBqBH,KAAA,CAAAU,QAAQ,GAAAP,MAAA;QACjBC,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAR,EAAQ;QACPC,KAAK,EAAEf,QAAA,CAAAoB;;QAEC,kBAAgB,EAAAjB,QAAA,CAAC,MAE5B,CA5BVc,gBAAA,CA0BsC,gDAE5B,E;QA5BVC,CAAA;;MAAAA,CAAA;QAgCMtB,YAAA,CAGWyB,mBAAA;MAHDR,IAAI,EAAC,QAAQ;MAACS,OAAO,EAAC,SAAS;MAAEC,QAAQ,EAAEd,KAAA,CAAAe;;MAhC3DtB,OAAA,EAAAC,QAAA,CAiCQ,MAA8C,CAA7BM,KAAA,CAAAe,SAAS,I,cAA1BC,YAAA,CAA8CC,oBAAA;QAjCtDC,GAAA;QAiCoCC,KAAK,EAAL;YAjCpCC,mBAAA,gBAAAZ,gBAAA,CAiCsD,SAEhD,E;MAnCNC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Main from \"@/components/Main.vue\";\nimport Login from \"@/components/User/Login.vue\";\nimport AuthService from \"./AuthService\";\nconst routes = [{\n  path: '/',\n  name: 'Main',\n  component: Main\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.path !== '/login' && !AuthService.isAuthenticated()) {\n    // If the user is not authenticated and trying to access any route other than /login, redirect to /login\n    next('/login');\n  } else if (to.path === '/login' && AuthService.isAuthenticated()) {\n    // If the user is authenticated and trying to access /login, redirect to /\n    next('/');\n  } else {\n    // Otherwise, allow navigation\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Main","Login","AuthService","routes","path","name","component","router","history","beforeEach","to","from","next","isAuthenticated"],"sources":["C:/xampp/htdocs/assessment_test/ui/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport Main from \"@/components/Main.vue\";\r\nimport Login from \"@/components/User/Login.vue\";\r\nimport AuthService from \"./AuthService\";\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        name: 'Main',\r\n        component: Main\r\n    },\r\n    {\r\n        path: '/login',\r\n        name: 'Login',\r\n        component: Login\r\n    }\r\n]\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    if (to.path !== '/login' && !AuthService.isAuthenticated()) {\r\n        // If the user is not authenticated and trying to access any route other than /login, redirect to /login\r\n        next('/login')\r\n    } else if (to.path === '/login' && AuthService.isAuthenticated()) {\r\n        // If the user is authenticated and trying to access /login, redirect to /\r\n        next('/')\r\n    } else {\r\n        // Otherwise, allow navigation\r\n        next()\r\n    }\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEN;AACf,CAAC,EACD;EACII,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEL;AACf,CAAC,CACJ;AAED,MAAMM,MAAM,GAAGT,YAAY,CAAC;EACxBU,OAAO,EAAET,gBAAgB,CAAC,CAAC;EAC3BI;AACJ,CAAC,CAAC;AAEFI,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,IAAIF,EAAE,CAACN,IAAI,KAAK,QAAQ,IAAI,CAACF,WAAW,CAACW,eAAe,CAAC,CAAC,EAAE;IACxD;IACAD,IAAI,CAAC,QAAQ,CAAC;EAClB,CAAC,MAAM,IAAIF,EAAE,CAACN,IAAI,KAAK,QAAQ,IAAIF,WAAW,CAACW,eAAe,CAAC,CAAC,EAAE;IAC9D;IACAD,IAAI,CAAC,GAAG,CAAC;EACb,CAAC,MAAM;IACH;IACAA,IAAI,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Main from \"@/components/Main.vue\";\nimport Login from \"@/components/User/Login.vue\";\nimport Register from \"@/components/User/Register.vue\";\nimport AuthService from \"./AuthService\";\nconst routes = [{\n  path: '/',\n  name: 'Main',\n  component: Main,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = AuthService.isAuthenticated();\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (isAuthenticated) {\n      next();\n    } else {\n      next('/login');\n    }\n  } else if (to.path === '/login' && isAuthenticated) {\n    next('/');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Main","Login","Register","AuthService","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","isAuthenticated","matched","some","record"],"sources":["C:/xampp/htdocs/mystaff_backend_test/frontend/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport Main from \"@/components/Main.vue\";\r\nimport Login from \"@/components/User/Login.vue\";\r\nimport Register from \"@/components/User/Register.vue\";\r\nimport AuthService from \"./AuthService\";\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        name: 'Main',\r\n        component: Main,\r\n        meta: { requiresAuth: true }\r\n    },\r\n    {\r\n        path: '/login',\r\n        name: 'Login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/register',\r\n        name: 'Register',\r\n        component: Register\r\n    }\r\n];\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    const isAuthenticated = AuthService.isAuthenticated();\r\n\r\n    if (to.matched.some(record => record.meta.requiresAuth)) {\r\n        if (isAuthenticated) {\r\n            next();\r\n        } else {\r\n            next('/login');\r\n        }\r\n    } else if (to.path === '/login' && isAuthenticated) {\r\n        next('/');\r\n    } else {\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEP,IAAI;EACfQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC/B,CAAC,EACD;EACIJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACf,CAAC,EACD;EACII,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL;AACf,CAAC,CACJ;AAED,MAAMQ,MAAM,GAAGZ,YAAY,CAAC;EACxBa,OAAO,EAAEZ,gBAAgB,CAAC,CAAC;EAC3BK;AACJ,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,eAAe,GAAGb,WAAW,CAACa,eAAe,CAAC,CAAC;EAErD,IAAIH,EAAE,CAACI,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACX,IAAI,CAACC,YAAY,CAAC,EAAE;IACrD,IAAIO,eAAe,EAAE;MACjBD,IAAI,CAAC,CAAC;IACV,CAAC,MAAM;MACHA,IAAI,CAAC,QAAQ,CAAC;IAClB;EACJ,CAAC,MAAM,IAAIF,EAAE,CAACR,IAAI,KAAK,QAAQ,IAAIW,eAAe,EAAE;IAChDD,IAAI,CAAC,GAAG,CAAC;EACb,CAAC,MAAM;IACHA,IAAI,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
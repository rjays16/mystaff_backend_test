{"ast":null,"code":"import { mapActions } from 'vuex';\nimport Swal from 'sweetalert2';\nexport default {\n  props: {\n    editedItem: Object,\n    showEditModal: Boolean,\n    statusOptions: {\n      type: Array,\n      default: () => [{\n        value: 'active',\n        text: 'Active'\n      }, {\n        value: 'expired',\n        text: 'Expired'\n      }]\n    },\n    index: Number\n  },\n  data() {\n    return {\n      showModal: false,\n      editedItemCopy: {}\n    };\n  },\n  watch: {\n    showEditModal(newVal) {\n      this.showModal = newVal;\n      if (newVal) {\n        this.editedItemCopy = {\n          ...this.editedItem\n        };\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['updateProduct']),\n    async submitEditForm() {\n      try {\n        await this.updateProduct(this.editedItemCopy);\n        this.$emit('submit-edit', this.editedItemCopy);\n\n        // Close the modal\n        this.showModal = false;\n\n        // Optionally, trigger SweetAlert in the component as well\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Product updated successfully',\n          showConfirmButton: false,\n          timer: 1500 // milliseconds\n        });\n      } catch (error) {\n        // Handle error (SweetAlert already handles it in Vuex)\n        console.error('Error updating product:', error);\n      }\n    },\n    onHidden() {\n      this.$emit('cancel-edit');\n    }\n  }\n};","map":{"version":3,"names":["mapActions","Swal","props","editedItem","Object","showEditModal","Boolean","statusOptions","type","Array","default","value","text","index","Number","data","showModal","editedItemCopy","watch","newVal","methods","submitEditForm","updateProduct","$emit","fire","icon","title","showConfirmButton","timer","error","console","onHidden"],"sources":["C:\\xampp\\htdocs\\assessment_test\\ui\\src\\components\\Modal\\EditModal.vue"],"sourcesContent":["<template>\r\n  <b-modal v-model=\"showModal\" @hidden=\"onHidden\" title=\"Edit Task\">\r\n    <b-form @submit.stop.prevent=\"submitEditForm\">\r\n      <b-form-group label=\"Title\" label-for=\"editTitle\">\r\n        <b-form-input id=\"editTitle\" v-model=\"editedItemCopy.title\" required></b-form-input>\r\n      </b-form-group>\r\n      <b-form-group label=\"Description\" label-for=\"editDescription\">\r\n        <b-form-textarea id=\"editDescription\" v-model=\"editedItemCopy.description\" required></b-form-textarea>\r\n      </b-form-group>\r\n      <b-form-group label=\"Due Date\" label-for=\"editDueDate\">\r\n        <b-form-input id=\"editDueDate\" v-model=\"editedItemCopy.due_date\" type=\"date\" required></b-form-input>\r\n      </b-form-group>\r\n      <b-form-group label=\"Status\" label-for=\"editStatus\">\r\n        <b-form-select id=\"editStatus\" v-model=\"editedItemCopy.status\" :options=\"statusOptions\" required></b-form-select>\r\n      </b-form-group>\r\n      <b-button type=\"submit\" variant=\"primary\">Save</b-button>\r\n    </b-form>\r\n  </b-modal>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  props: {\r\n    editedItem: Object,\r\n    showEditModal: Boolean,\r\n    statusOptions: {\r\n      type: Array,\r\n      default: () => [\r\n        {value: 'active', text: 'Active'},\r\n        {value: 'expired', text: 'Expired'}\r\n      ]\r\n    },\r\n    index: Number,\r\n  },\r\n  data() {\r\n    return {\r\n      showModal: false,\r\n      editedItemCopy: {}\r\n    };\r\n  },\r\n  watch: {\r\n    showEditModal(newVal) {\r\n      this.showModal = newVal;\r\n      if (newVal) {\r\n        this.editedItemCopy = {...this.editedItem};\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['updateProduct']),\r\n    async submitEditForm() {\r\n      try {\r\n        await this.updateProduct(this.editedItemCopy);\r\n        this.$emit('submit-edit', this.editedItemCopy);\r\n\r\n        // Close the modal\r\n        this.showModal = false;\r\n\r\n        // Optionally, trigger SweetAlert in the component as well\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success!',\r\n          text: 'Product updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1500 // milliseconds\r\n        });\r\n      } catch (error) {\r\n        // Handle error (SweetAlert already handles it in Vuex)\r\n        console.error('Error updating product:', error);\r\n      }\r\n    },\r\n    onHidden() {\r\n      this.$emit('cancel-edit');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":"AAqBA,SAASA,UAAS,QAAS,MAAM;AACjC,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAEC,MAAM;IAClBC,aAAa,EAAEC,OAAO;IACtBC,aAAa,EAAE;MACbC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM,CACb;QAACC,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAQ,CAAC,EACjC;QAACD,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAS;IAEtC,CAAC;IACDC,KAAK,EAAEC;EACT,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,cAAc,EAAE,CAAC;IACnB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLb,aAAaA,CAACc,MAAM,EAAE;MACpB,IAAI,CAACH,SAAQ,GAAIG,MAAM;MACvB,IAAIA,MAAM,EAAE;QACV,IAAI,CAACF,cAAa,GAAI;UAAC,GAAG,IAAI,CAACd;QAAU,CAAC;MAC5C;IACF;EACF,CAAC;EACDiB,OAAO,EAAE;IACP,GAAGpB,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;IAChC,MAAMqB,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAM,IAAI,CAACC,aAAa,CAAC,IAAI,CAACL,cAAc,CAAC;QAC7C,IAAI,CAACM,KAAK,CAAC,aAAa,EAAE,IAAI,CAACN,cAAc,CAAC;;QAE9C;QACA,IAAI,CAACD,SAAQ,GAAI,KAAK;;QAEtB;QACAf,IAAI,CAACuB,IAAI,CAAC;UACRC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,UAAU;UACjBd,IAAI,EAAE,8BAA8B;UACpCe,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE,IAAG,CAAE;QACd,CAAC,CAAC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDE,QAAQA,CAAA,EAAG;MACT,IAAI,CAACR,KAAK,CAAC,aAAa,CAAC;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
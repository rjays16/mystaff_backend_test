{"ast":null,"code":"import axios from './axiosConfig';\nclass AuthService {\n  async login(credentials) {\n    try {\n      const response = await axios.post(`/api/login`, credentials);\n      return response.data;\n    } catch (error) {\n      console.error('Error logging in:', error);\n      throw error;\n    }\n  }\n  async logout() {\n    try {\n      await axios.post(`/api/logout`); // Assuming this is the endpoint for logging out\n      this.removeToken(); // Clear the authentication token from local storage\n    } catch (error) {\n      console.error('Error logging out:', error);\n      throw error;\n    }\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  removeToken() {\n    localStorage.removeItem('token');\n  }\n  isAuthenticated() {\n    const token = this.getToken();\n    return !!token;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","AuthService","login","credentials","response","post","data","error","console","logout","removeToken","setToken","token","localStorage","setItem","getToken","getItem","removeItem","isAuthenticated"],"sources":["C:/xampp/htdocs/assessment_test/ui/AuthService.js"],"sourcesContent":["import axios from './axiosConfig';\r\n\r\nclass AuthService {\r\n    async login(credentials) {\r\n        try {\r\n            const response = await axios.post(`/api/login`, credentials);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error logging in:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async logout() {\r\n        try {\r\n            await axios.post(`/api/logout`); // Assuming this is the endpoint for logging out\r\n            this.removeToken(); // Clear the authentication token from local storage\r\n        } catch (error) {\r\n            console.error('Error logging out:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setToken(token) {\r\n        localStorage.setItem('token', token);\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    removeToken() {\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    isAuthenticated() {\r\n        const token = this.getToken();\r\n        return !!token;\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,eAAe;AAEjC,MAAMC,WAAW,CAAC;EACd,MAAMC,KAAKA,CAACC,WAAW,EAAE;IACrB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,YAAW,EAAEF,WAAW,CAAC;MAC5D,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK;IACf;EACJ;EAEA,MAAME,MAAMA,CAAA,EAAG;IACX,IAAI;MACA,MAAMT,KAAK,CAACK,IAAI,CAAE,aAAY,CAAC,CAAC,CAAC;MACjC,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACf;EACJ;EAEAI,QAAQA,CAACC,KAAK,EAAE;IACZC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACxC;EAEAG,QAAQA,CAAA,EAAG;IACP,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACxC;EAEAN,WAAWA,CAAA,EAAG;IACVG,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;EACpC;EAEAC,eAAeA,CAAA,EAAG;IACd,MAAMN,KAAK,GAAG,IAAI,CAACG,QAAQ,CAAC,CAAC;IAC7B,OAAO,CAAC,CAACH,KAAK;EAClB;AACJ;AAEA,eAAe,IAAIX,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
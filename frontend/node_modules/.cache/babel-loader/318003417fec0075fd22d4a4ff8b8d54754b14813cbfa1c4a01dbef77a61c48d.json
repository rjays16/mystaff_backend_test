{"ast":null,"code":"import AddModal from \"@/components/Modal/AddModal.vue\";\nimport EditModal from \"@/components/Modal/EditModal.vue\";\nimport { mapState, mapActions } from 'vuex';\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'App',\n  components: {\n    AddModal,\n    EditModal\n  },\n  data() {\n    return {\n      fields: [{\n        key: 'id',\n        label: 'ID'\n      }, {\n        key: 'title',\n        label: 'Title'\n      }, {\n        key: 'description',\n        label: 'Description'\n      }, {\n        key: 'due_date',\n        label: 'Due Date'\n      }, {\n        key: 'status',\n        label: 'Status'\n      }, {\n        key: 'actions',\n        label: 'Actions'\n      }],\n      statusOptions: [{\n        value: 1,\n        text: 'Active'\n      }, {\n        value: 0,\n        text: 'Expired'\n      }],\n      showEditModal: false,\n      editedItem: {}\n    };\n  },\n  computed: {\n    ...mapState({\n      products: state => state.products\n    }),\n    productsWithStatus() {\n      return this.products.map(product => ({\n        ...product,\n        status: this.mapStatus(product.status)\n      }));\n    }\n  },\n  methods: {\n    ...mapActions(['getProducts', 'updateProduct']),\n    showModal() {\n      this.$refs.addModal.showModal();\n    },\n    openEditModal(item) {\n      this.editedItem = {\n        ...item\n      };\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n    async updateEditedItem(updatedItem) {\n      try {\n        const updatedProduct = await this.updateProduct(updatedItem);\n        // Find the index of the edited product in the products array\n        const index = this.products.findIndex(product => product.id === updatedProduct.id);\n        // Update the product at that index with the updated product\n        if (index !== -1) {\n          this.products.splice(index, 1, updatedProduct);\n        }\n        Swal.fire({\n          title: 'Success!',\n          text: 'Product successfully updated',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        });\n        this.showEditModal = false;\n      } catch (error) {\n        console.error('Error updating product:', error);\n      }\n    },\n    async deleteProduct(id) {\n      try {\n        await this.$store.dispatch('deleteProduct', id);\n        Swal.fire({\n          title: 'Success!',\n          text: 'Product successfully deleted',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        });\n      } catch (error) {\n        console.error('Error deleting product:', error);\n      }\n    },\n    addProduct(newProduct) {\n      this.$store.commit('ADD_PRODUCT', newProduct);\n    },\n    mapStatus(status) {\n      return status === 1 ? 'active' : 'expired';\n    }\n  },\n  created() {\n    this.getProducts();\n  }\n};","map":{"version":3,"names":["AddModal","EditModal","mapState","mapActions","Swal","name","components","data","fields","key","label","statusOptions","value","text","showEditModal","editedItem","computed","products","state","productsWithStatus","map","product","status","mapStatus","methods","showModal","$refs","addModal","openEditModal","item","closeEditModal","updateEditedItem","updatedItem","updatedProduct","updateProduct","index","findIndex","id","splice","fire","title","icon","confirmButtonText","error","console","deleteProduct","$store","dispatch","addProduct","newProduct","commit","created","getProducts"],"sources":["C:\\xampp\\htdocs\\assessment_test\\ui\\src\\components\\Modal\\EditModal.vue"],"sourcesContent":["<script>\r\nimport AddModal from \"@/components/Modal/AddModal.vue\";\r\nimport EditModal from \"@/components/Modal/EditModal.vue\";\r\nimport { mapState, mapActions } from 'vuex';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: { AddModal, EditModal },\r\n  data() {\r\n    return {\r\n      fields: [\r\n        { key: 'id', label: 'ID' },\r\n        { key: 'title', label: 'Title' },\r\n        { key: 'description', label: 'Description' },\r\n        { key: 'due_date', label: 'Due Date' },\r\n        { key: 'status', label: 'Status' },\r\n        { key: 'actions', label: 'Actions' }\r\n      ],\r\n      statusOptions: [\r\n        { value: 1, text: 'Active' },\r\n        { value: 0, text: 'Expired' }\r\n      ],\r\n      showEditModal: false,\r\n      editedItem: {}\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      products: state => state.products\r\n    }),\r\n    productsWithStatus() {\r\n      return this.products.map(product => ({\r\n        ...product,\r\n        status: this.mapStatus(product.status)\r\n      }));\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['getProducts', 'updateProduct']),\r\n    showModal() {\r\n      this.$refs.addModal.showModal();\r\n    },\r\n    openEditModal(item) {\r\n      this.editedItem = { ...item };\r\n      this.showEditModal = true;\r\n    },\r\n    closeEditModal() {\r\n      this.showEditModal = false;\r\n    },\r\n    async updateEditedItem(updatedItem) {\r\n      try {\r\n        const updatedProduct = await this.updateProduct(updatedItem);\r\n        // Find the index of the edited product in the products array\r\n        const index = this.products.findIndex(product => product.id === updatedProduct.id);\r\n        // Update the product at that index with the updated product\r\n        if (index !== -1) {\r\n          this.products.splice(index, 1, updatedProduct);\r\n        }\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: 'Product successfully updated',\r\n          icon: 'success',\r\n          confirmButtonText: 'OK'\r\n        });\r\n        this.showEditModal = false;\r\n      } catch (error) {\r\n        console.error('Error updating product:', error);\r\n      }\r\n    },\r\n    async deleteProduct(id) {\r\n      try {\r\n        await this.$store.dispatch('deleteProduct', id);\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: 'Product successfully deleted',\r\n          icon: 'success',\r\n          confirmButtonText: 'OK'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error deleting product:', error);\r\n      }\r\n    },\r\n    addProduct(newProduct) {\r\n      this.$store.commit('ADD_PRODUCT', newProduct);\r\n    },\r\n    mapStatus(status) {\r\n      return status === 1 ? 'active' : 'expired';\r\n    }\r\n  },\r\n  created() {\r\n    this.getProducts();\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
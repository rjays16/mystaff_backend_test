{"ast":null,"code":"import AddModal from \"@/components/Modal/AddModal.vue\";\nimport EditModal from \"@/components/Modal/EditModal.vue\";\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'App',\n  components: {\n    AddModal,\n    EditModal\n  },\n  data() {\n    return {\n      fields: [{\n        key: 'id',\n        label: 'ID'\n      }, {\n        key: 'title',\n        label: 'Title'\n      }, {\n        key: 'description',\n        label: 'Description'\n      }, {\n        key: 'due_date',\n        label: 'Due Date'\n      }, {\n        key: 'status',\n        label: 'Status'\n      }, {\n        key: 'actions',\n        label: 'Actions'\n      }],\n      statusOptions: [{\n        value: 1,\n        text: 'Active'\n      }, {\n        value: 0,\n        text: 'Expired'\n      }],\n      showEditModal: false,\n      editedItem: {}\n    };\n  },\n  computed: {\n    ...mapState({\n      products: state => state.products\n    }),\n    productsWithStatus() {\n      return this.products.map(product => ({\n        ...product,\n        status: this.mapStatus(product.status)\n      }));\n    }\n  },\n  methods: {\n    ...mapActions(['getProducts', 'deleteProduct']),\n    showModal() {\n      this.$refs.addModal.showModal();\n    },\n    openEditModal(item) {\n      this.editedItem = {\n        ...item\n      };\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n    updateEditedItem(updatedItem) {\n      const index = this.products.findIndex(p => p.id === updatedItem.id);\n      if (index !== -1) {\n        this.$store.commit('SET_PRODUCTS', [...this.products.slice(0, index), updatedItem, ...this.products.slice(index + 1)]);\n      }\n      this.showEditModal = false;\n    },\n    addProduct(newProduct) {\n      this.$store.commit('ADD_PRODUCT', newProduct);\n    },\n    deleteProduct(id) {\n      this.deleteProduct(id).then(() => {\n        this.$bvToast.toast('Product deleted successfully', {\n          title: 'Success',\n          variant: 'success',\n          solid: true\n        });\n      }).catch(error => {\n        this.$bvToast.toast(`Error: ${error.message}`, {\n          title: 'Error',\n          variant: 'danger',\n          solid: true\n        });\n      });\n    },\n    mapStatus(status) {\n      return status === 1 ? 'active' : 'expired';\n    }\n  },\n  created() {\n    this.getProducts();\n  }\n};","map":{"version":3,"names":["AddModal","EditModal","mapState","mapActions","name","components","data","fields","key","label","statusOptions","value","text","showEditModal","editedItem","computed","products","state","productsWithStatus","map","product","status","mapStatus","methods","showModal","$refs","addModal","openEditModal","item","closeEditModal","updateEditedItem","updatedItem","index","findIndex","p","id","$store","commit","slice","addProduct","newProduct","deleteProduct","then","$bvToast","toast","title","variant","solid","catch","error","message","created","getProducts"],"sources":["C:\\xampp\\htdocs\\assessment_test\\ui\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <b-container>\n      <b-row class=\"mb-3\">\n        <b-col>\n          <h1>Product List</h1>\n          <b-button size=\"md\" variant=\"success\" class=\"float-end\" @click=\"showModal\">Add New Product</b-button>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <b-table striped hover :items=\"productsWithStatus\" :fields=\"fields\" :show-empty=\"productsWithStatus.length === 0\">\n            <template #cell(actions)=\"data\">\n              <b-button size=\"sm\" variant=\"primary\" @click=\"openEditModal(data.item)\" class=\"me-3\">Edit</b-button>\n              <b-button size=\"sm\" variant=\"danger\" @click=\"deleteProduct(data.item.id)\">Delete</b-button>\n            </template>\n            <template #empty>\n              <div class=\"text-center\">\n                Empty Data\n              </div>\n            </template>\n          </b-table>\n        </b-col>\n      </b-row>\n      <AddModal ref=\"addModal\" @add-product=\"addProduct\"/>\n      <EditModal\n          :editedItem=\"editedItem\"\n          :showEditModal=\"showEditModal\"\n          :statusOptions=\"statusOptions\"\n          @submit-edit=\"updateEditedItem\"\n          @cancel-edit=\"closeEditModal\"\n      />\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport AddModal from \"@/components/Modal/AddModal.vue\";\nimport EditModal from \"@/components/Modal/EditModal.vue\";\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'App',\n  components: {AddModal, EditModal},\n  data() {\n    return {\n      fields: [\n        {key: 'id', label: 'ID'},\n        {key: 'title', label: 'Title'},\n        {key: 'description', label: 'Description'},\n        {key: 'due_date', label: 'Due Date'},\n        {key: 'status', label: 'Status'},\n        {key: 'actions', label: 'Actions'}\n      ],\n      statusOptions: [\n        {value: 1, text: 'Active'},\n        {value: 0, text: 'Expired'}\n      ],\n      showEditModal: false,\n      editedItem: {}\n    }\n  },\n  computed: {\n    ...mapState({\n      products: state => state.products\n    }),\n    productsWithStatus() {\n      return this.products.map(product => ({\n        ...product,\n        status: this.mapStatus(product.status)\n      }));\n    }\n  },\n  methods: {\n    ...mapActions(['getProducts', 'deleteProduct']),\n    showModal() {\n      this.$refs.addModal.showModal();\n    },\n    openEditModal(item) {\n      this.editedItem = {...item};\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n    updateEditedItem(updatedItem) {\n      const index = this.products.findIndex(p => p.id === updatedItem.id);\n      if (index !== -1) {\n        this.$store.commit('SET_PRODUCTS', [\n          ...this.products.slice(0, index),\n          updatedItem,\n          ...this.products.slice(index + 1)\n        ]);\n      }\n      this.showEditModal = false;\n    },\n    addProduct(newProduct) {\n      this.$store.commit('ADD_PRODUCT', newProduct);\n    },\n    deleteProduct(id) {\n      this.deleteProduct(id)\n          .then(() => {\n            this.$bvToast.toast('Product deleted successfully', {\n              title: 'Success',\n              variant: 'success',\n              solid: true\n            });\n          })\n          .catch(error => {\n            this.$bvToast.toast(`Error: ${error.message}`, {\n              title: 'Error',\n              variant: 'danger',\n              solid: true\n            });\n          });\n    },\n    mapStatus(status) {\n      return status === 1 ? 'active' : 'expired';\n    }\n  },\n  created() {\n    this.getProducts();\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
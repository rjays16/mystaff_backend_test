{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EditModal = _resolveComponent(\"EditModal\");\n  const _component_b_container = _resolveComponent(\"b-container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_b_container, null, {\n    default: _withCtx(() => [_createCommentVNode(\" other code omitted for brevity \"), _createVNode(_component_EditModal, {\n      editedItem: $data.editedItem,\n      showEditModal: $data.showEditModal,\n      statusOptions: _ctx.statusOptions,\n      onSubmitEdit: $options.updateEditedItem\n    }, null, 8 /* PROPS */, [\"editedItem\", \"showEditModal\", \"statusOptions\", \"onSubmitEdit\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_b_container","default","_withCtx","_createCommentVNode","_component_EditModal","editedItem","$data","showEditModal","statusOptions","_ctx","onSubmitEdit","$options","updateEditedItem","_"],"sources":["C:\\xampp\\htdocs\\assessment_test\\ui\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <b-container>\n      <!-- other code omitted for brevity -->\n      <EditModal :editedItem=\"editedItem\" :showEditModal=\"showEditModal\" :statusOptions=\"statusOptions\" @submit-edit=\"updateEditedItem\" />\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport EditModal from \"@/components/Modal/EditModal.vue\";\n\nexport default {\n  name: 'HelloWorld',\n  components: { EditModal  },\n  data() {\n    return {\n      // other data properties omitted for brevity\n      showEditModal: false,\n      editedItem: {}\n    }\n  },\n  methods: {\n    // other methods omitted for brevity\n    openEditModal(item) {\n      this.editedItem = { ...item };\n      this.showEditModal = true;\n    },\n    updateEditedItem(updatedItem) {\n      this.editedItem = updatedItem;\n      // Close the modal after updating the edited item\n      this.showEditModal = false;\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAGcC,sBAAA;IALlBC,OAAA,EAAAC,QAAA,CAGM,MAAuC,CAAvCC,mBAAA,oCAAuC,EACvCJ,YAAA,CAAoIK,oBAAA;MAAxHC,UAAU,EAAEC,KAAA,CAAAD,UAAU;MAAGE,aAAa,EAAED,KAAA,CAAAC,aAAa;MAAGC,aAAa,EAAEC,IAAA,CAAAD,aAAa;MAAGE,YAAW,EAAEC,QAAA,CAAAC;;IAJtHC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
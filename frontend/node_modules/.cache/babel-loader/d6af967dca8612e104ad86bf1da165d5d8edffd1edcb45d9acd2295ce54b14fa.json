{"ast":null,"code":"import { mapActions } from 'vuex';\nimport Swal from 'sweetalert2';\nexport default {\n  props: {\n    editedItem: {\n      type: Object,\n      required: true\n    },\n    showEditModal: {\n      type: Boolean,\n      required: true\n    },\n    statusOptions: {\n      type: Array,\n      default: () => [{\n        value: '0',\n        text: 'Active'\n      }, {\n        value: '1',\n        text: 'Expired'\n      }]\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedItemCopy: {}\n    };\n  },\n  watch: {\n    showEditModal(newVal) {\n      this.showModal = newVal;\n      if (newVal) {\n        this.editedItemCopy = {\n          ...this.editedItem\n        };\n      }\n    },\n    showModal(newVal) {\n      if (!newVal) {\n        this.$emit('update:showEditModal', false); // Sync modal state with parent\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['updateProduct']),\n    async submitEditForm() {\n      try {\n        const updatedProduct = await this.updateProduct(this.editedItemCopy);\n        this.$emit('submit-edit', updatedProduct);\n\n        // Close the modal\n        this.showModal = false;\n\n        // Optionally, trigger SweetAlert in the component as well\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Product updated successfully',\n          showConfirmButton: false,\n          timer: 1500 // milliseconds\n        });\n      } catch (error) {\n        // Handle error (SweetAlert already handles it in Vuex)\n        console.error('Error updating product:', error);\n      }\n    },\n    onHidden() {\n      this.$emit('cancel-edit');\n    }\n  }\n};","map":{"version":3,"names":["mapActions","Swal","props","editedItem","type","Object","required","showEditModal","Boolean","statusOptions","Array","default","value","text","data","showModal","editedItemCopy","watch","newVal","$emit","methods","submitEditForm","updatedProduct","updateProduct","fire","icon","title","showConfirmButton","timer","error","console","onHidden"],"sources":["C:\\xampp\\htdocs\\assessment_test\\ui\\src\\components\\Modal\\EditModal.vue"],"sourcesContent":["<template>\r\n  <b-modal v-model=\"showModal\" @hidden=\"onHidden\" title=\"Edit Task\" @ok=\"submitEditForm\">\r\n    <b-form @submit.stop.prevent=\"submitEditForm\">\r\n      <b-form-group label=\"Title\" label-for=\"editTitle\">\r\n        <b-form-input id=\"editTitle\" v-model=\"editedItemCopy.title\" required></b-form-input>\r\n      </b-form-group>\r\n      <b-form-group label=\"Description\" label-for=\"editDescription\">\r\n        <b-form-textarea id=\"editDescription\" v-model=\"editedItemCopy.description\" required></b-form-textarea>\r\n      </b-form-group>\r\n      <b-form-group label=\"Due Date\" label-for=\"editDueDate\">\r\n        <b-form-input id=\"editDueDate\" v-model=\"editedItemCopy.due_date\" type=\"date\" required></b-form-input>\r\n      </b-form-group>\r\n      <b-form-group label=\"Status\" label-for=\"editStatus\">\r\n        <b-form-select\r\n            id=\"product-status\"\r\n            v-model=\"editedItemCopy.status\"\r\n            :options=\"statusOptions\"\r\n            required\r\n        ></b-form-select>\r\n      </b-form-group>\r\n    </b-form>\r\n  </b-modal>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  props: {\r\n    editedItem: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    showEditModal: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    statusOptions: {\r\n      type: Array,\r\n      default: () => [\r\n        { value: '0', text: 'Active' },\r\n        { value: '1', text: 'Expired' }\r\n      ]\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      showModal: false,\r\n      editedItemCopy: {}\r\n    };\r\n  },\r\n  watch: {\r\n    showEditModal(newVal) {\r\n      this.showModal = newVal;\r\n      if (newVal) {\r\n        this.editedItemCopy = { ...this.editedItem };\r\n      }\r\n    },\r\n    showModal(newVal) {\r\n      if (!newVal) {\r\n        this.$emit('update:showEditModal', false); // Sync modal state with parent\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['updateProduct']),\r\n    async submitEditForm() {\r\n      try {\r\n        const updatedProduct = await this.updateProduct(this.editedItemCopy);\r\n        this.$emit('submit-edit', updatedProduct);\r\n\r\n        // Close the modal\r\n        this.showModal = false;\r\n\r\n        // Optionally, trigger SweetAlert in the component as well\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success!',\r\n          text: 'Product updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1500 // milliseconds\r\n        });\r\n      } catch (error) {\r\n        // Handle error (SweetAlert already handles it in Vuex)\r\n        console.error('Error updating product:', error);\r\n      }\r\n    },\r\n    onHidden() {\r\n      this.$emit('cancel-edit');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":"AAyBA,SAASA,UAAS,QAAS,MAAM;AACjC,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,aAAa,EAAE;MACbH,IAAI,EAAEI,OAAO;MACbF,QAAQ,EAAE;IACZ,CAAC;IACDG,aAAa,EAAE;MACbL,IAAI,EAAEM,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM,CACb;QAAEC,KAAK,EAAE,GAAG;QAAEC,IAAI,EAAE;MAAS,CAAC,EAC9B;QAAED,KAAK,EAAE,GAAG;QAAEC,IAAI,EAAE;MAAU;IAElC;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,cAAc,EAAE,CAAC;IACnB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLV,aAAaA,CAACW,MAAM,EAAE;MACpB,IAAI,CAACH,SAAQ,GAAIG,MAAM;MACvB,IAAIA,MAAM,EAAE;QACV,IAAI,CAACF,cAAa,GAAI;UAAE,GAAG,IAAI,CAACb;QAAW,CAAC;MAC9C;IACF,CAAC;IACDY,SAASA,CAACG,MAAM,EAAE;MAChB,IAAI,CAACA,MAAM,EAAE;QACX,IAAI,CAACC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,EAAE;MAC7C;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGpB,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;IAChC,MAAMqB,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,cAAa,GAAI,MAAM,IAAI,CAACC,aAAa,CAAC,IAAI,CAACP,cAAc,CAAC;QACpE,IAAI,CAACG,KAAK,CAAC,aAAa,EAAEG,cAAc,CAAC;;QAEzC;QACA,IAAI,CAACP,SAAQ,GAAI,KAAK;;QAEtB;QACAd,IAAI,CAACuB,IAAI,CAAC;UACRC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,UAAU;UACjBb,IAAI,EAAE,8BAA8B;UACpCc,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE,IAAG,CAAE;QACd,CAAC,CAAC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDE,QAAQA,CAAA,EAAG;MACT,IAAI,CAACZ,KAAK,CAAC,aAAa,CAAC;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      videoFile: null,\n      isModalVisible: false\n    };\n  },\n  methods: {\n    ...mapActions(['uploadVideo']),\n    showModal() {\n      this.isModalVisible = true;\n    },\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    onFileSelected(event) {\n      this.videoFile = event.target.files[0];\n    },\n    handleUpload() {\n      if (this.videoFile) {\n        const formData = new FormData();\n        formData.append('file', this.videoFile);\n        this.uploadVideo(formData).then(() => {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success',\n            text: 'Video uploaded successfully',\n            confirmButtonText: 'OK'\n          });\n          this.resetForm();\n          this.$emit('video-uploaded');\n        }).catch(error => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: error.response?.data?.message || 'An error occurred'\n          });\n        });\n      }\n    },\n    resetForm() {\n      this.videoFile = null;\n      this.isModalVisible = false;\n    }\n  }\n};","map":{"version":3,"names":["Swal","mapActions","data","videoFile","isModalVisible","methods","showModal","triggerFileInput","$refs","fileInput","click","onFileSelected","event","target","files","handleUpload","formData","FormData","append","uploadVideo","then","fire","icon","title","text","confirmButtonText","resetForm","$emit","catch","error","response","message"],"sources":["C:\\xampp\\htdocs\\mystaff_backend_test\\frontend\\src\\components\\Modal\\UploadModal.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <b-modal id=\"upload-video-modal\" v-model=\"isModalVisible\" title=\"Upload Video\" ok-title=\"Upload\" ok-class=\"btn-upload\" @ok=\"handleUpload\">\r\n        <div class=\"custom-file-upload\" @click=\"triggerFileInput\">\r\n          <i class=\"fas fa-cloud-upload-alt\"></i>\r\n          <p>Click to choose a video or drag and drop it here</p>\r\n          <p v-if=\"videoFile\">Selected: {{ videoFile.name }}</p>\r\n        </div>\r\n        <input \r\n          type=\"file\" \r\n          ref=\"fileInput\" \r\n          @change=\"onFileSelected\" \r\n          accept=\"video/*\" \r\n          style=\"display: none;\"\r\n        >\r\n      </b-modal>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import Swal from 'sweetalert2';\r\n  import { mapActions } from 'vuex';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        videoFile: null,\r\n        isModalVisible: false,\r\n      };\r\n    },\r\n    methods: {\r\n      ...mapActions(['uploadVideo']),\r\n      showModal() {\r\n        this.isModalVisible = true;\r\n      },\r\n      triggerFileInput() {\r\n        this.$refs.fileInput.click();\r\n      },\r\n      onFileSelected(event) {\r\n        this.videoFile = event.target.files[0];\r\n      },\r\n      handleUpload() {\r\n        if (this.videoFile) {\r\n          const formData = new FormData();\r\n          formData.append('file', this.videoFile);\r\n  \r\n          this.uploadVideo(formData)\r\n            .then(() => { \r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: 'Video uploaded successfully',\r\n                confirmButtonText: 'OK',\r\n              });\r\n              this.resetForm();\r\n              this.$emit('video-uploaded');\r\n            })\r\n            .catch(error => {\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response?.data?.message || 'An error occurred'\r\n              });\r\n            });\r\n        }\r\n      },\r\n      resetForm() {\r\n        this.videoFile = null;\r\n        this.isModalVisible = false;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .custom-file-upload {\r\n    border: 2px dashed #3498db;\r\n    border-radius: 5px;\r\n    padding: 30px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .custom-file-upload:hover {\r\n    background-color: #f7f9fc;\r\n  }\r\n  \r\n  .custom-file-upload i {\r\n    font-size: 48px;\r\n    color: #3498db;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .custom-file-upload p {\r\n    margin: 0;\r\n    color: #34495e;\r\n  }\r\n  </style>"],"mappings":"AAoBE,OAAOA,IAAG,MAAO,aAAa;AAC9B,SAASC,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGJ,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC;IAC9BK,SAASA,CAAA,EAAG;MACV,IAAI,CAACF,cAAa,GAAI,IAAI;IAC5B,CAAC;IACDG,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACDC,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACT,SAAQ,GAAIS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACZ,SAAS,EAAE;QAClB,MAAMa,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACf,SAAS,CAAC;QAEvC,IAAI,CAACgB,WAAW,CAACH,QAAQ,EACtBI,IAAI,CAAC,MAAM;UACVpB,IAAI,CAACqB,IAAI,CAAC;YACRC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,SAAS;YAChBC,IAAI,EAAE,6BAA6B;YACnCC,iBAAiB,EAAE;UACrB,CAAC,CAAC;UACF,IAAI,CAACC,SAAS,CAAC,CAAC;UAChB,IAAI,CAACC,KAAK,CAAC,gBAAgB,CAAC;QAC9B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;UACd7B,IAAI,CAACqB,IAAI,CAAC;YACRC,IAAI,EAAE,OAAO;YACbC,KAAK,EAAE,OAAO;YACdC,IAAI,EAAEK,KAAK,CAACC,QAAQ,EAAE5B,IAAI,EAAE6B,OAAM,IAAK;UACzC,CAAC,CAAC;QACJ,CAAC,CAAC;MACN;IACF,CAAC;IACDL,SAASA,CAAA,EAAG;MACV,IAAI,CAACvB,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,cAAa,GAAI,KAAK;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AddModal from \"@/components/Modal/AddModal.vue\";\nimport EditModal from \"@/components/Modal/EditModal.vue\";\nexport default {\n  name: 'App',\n  components: {\n    AddModal,\n    EditModal\n  },\n  data() {\n    return {\n      fields: [{\n        key: 'id',\n        label: 'ID'\n      }, {\n        key: 'title',\n        label: 'Title'\n      }, {\n        key: 'description',\n        label: 'Description'\n      }, {\n        key: 'due_date',\n        label: 'Due Date'\n      }, {\n        key: 'status',\n        label: 'Status'\n      }, {\n        key: 'actions',\n        label: 'Actions'\n      }],\n      products: [{\n        id: 1,\n        title: 'Product 1',\n        description: 'Product 1 description',\n        due_date: '2024-05-19',\n        status: 'expired'\n      }, {\n        id: 2,\n        title: 'Product 2',\n        description: 'Product 2 description',\n        due_date: '2024-06-19',\n        status: 'active'\n      }],\n      statusOptions: [{\n        value: 'active',\n        text: 'Active'\n      }, {\n        value: 'expired',\n        text: 'Expired'\n      }],\n      showEditModal: false,\n      editedItem: {} // This will hold the currently edited item\n    };\n  },\n  methods: {\n    showModal() {\n      this.$refs.addModal.showModal();\n    },\n    openEditModal(item) {\n      // Set the editedItem to the item being edited\n      this.editedItem = {\n        ...item\n      };\n      this.showEditModal = true; // Setting the prop directly\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n    updateEditedItem(updatedItem) {\n      // Update the item in the products array\n      const index = this.products.findIndex(p => p.id === updatedItem.id);\n      if (index !== -1) {\n        this.products.splice(index, 1, updatedItem);\n      }\n      // Close the modal after updating the edited item\n      this.showEditModal = false; // Setting the prop directly\n    },\n    addProduct(newProduct) {\n      this.products.push(newProduct);\n    },\n    deleteProduct(id) {\n      this.products = this.products.filter(product => product.id !== id);\n    }\n  },\n  computed: {\n    rows() {\n      return this.products.length;\n    }\n  }\n};","map":{"version":3,"names":["AddModal","EditModal","name","components","data","fields","key","label","products","id","title","description","due_date","status","statusOptions","value","text","showEditModal","editedItem","methods","showModal","$refs","addModal","openEditModal","item","closeEditModal","updateEditedItem","updatedItem","index","findIndex","p","splice","addProduct","newProduct","push","deleteProduct","filter","product","computed","rows","length"],"sources":["C:\\xampp\\htdocs\\assessment_test\\ui\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <b-container>\n      <b-row class=\"mb-3\">\n        <b-col>\n          <h1>Product List</h1>\n          <b-button size=\"md\" variant=\"success\" class=\"float-end\" @click=\"showModal\">Add New Product</b-button>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <b-table striped hover :items=\"products\" :fields=\"fields\" :show-empty=\"products.length === 0\">\n            <template #cell(actions)=\"data\">\n              <b-button size=\"sm\" variant=\"primary\" @click=\"openEditModal(data.item)\" class=\"me-3\">Edit</b-button>\n              <b-button size=\"sm\" variant=\"danger\" @click=\"deleteProduct(data.item.id)\">Delete</b-button>\n            </template>\n            <template #empty>\n              <div class=\"text-center\">\n                Empty Data\n              </div>\n            </template>\n          </b-table>\n        </b-col>\n      </b-row>\n      <AddModal ref=\"addModal\" @add-product=\"addProduct\"/>\n      <EditModal\n          :editedItem=\"editedItem\"\n          :showEditModal=\"showEditModal\"\n          :statusOptions=\"statusOptions\"\n          @submit-edit=\"updateEditedItem\"\n          @cancel-edit=\"closeEditModal\"\n      />\n\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport AddModal from \"@/components/Modal/AddModal.vue\";\nimport EditModal from \"@/components/Modal/EditModal.vue\";\n\nexport default {\n  name: 'App',\n  components: { AddModal, EditModal },\n  data() {\n    return {\n      fields: [\n        { key: 'id', label: 'ID' },\n        { key: 'title', label: 'Title' },\n        { key: 'description', label: 'Description' },\n        { key: 'due_date', label: 'Due Date' },\n        { key: 'status', label: 'Status' },\n        { key: 'actions', label: 'Actions' }\n      ],\n      products: [\n        { id: 1, title: 'Product 1', description: 'Product 1 description', due_date: '2024-05-19', status: 'expired' },\n        { id: 2, title: 'Product 2', description: 'Product 2 description', due_date: '2024-06-19', status: 'active' },\n      ],\n      statusOptions: [\n        { value: 'active', text: 'Active' },\n        { value: 'expired', text: 'Expired' }\n      ],\n      showEditModal: false,\n      editedItem: {} // This will hold the currently edited item\n    }\n  },\n  methods: {\n    showModal() {\n      this.$refs.addModal.showModal();\n    },\n    openEditModal(item) {\n      // Set the editedItem to the item being edited\n      this.editedItem = { ...item };\n      this.showEditModal = true; // Setting the prop directly\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n\n    updateEditedItem(updatedItem) {\n      // Update the item in the products array\n      const index = this.products.findIndex(p => p.id === updatedItem.id);\n      if (index !== -1) {\n        this.products.splice(index, 1, updatedItem);\n      }\n      // Close the modal after updating the edited item\n      this.showEditModal = false; // Setting the prop directly\n    },\n    addProduct(newProduct) {\n      this.products.push(newProduct);\n    },\n    deleteProduct(id) {\n      this.products = this.products.filter(product => product.id !== id);\n    }\n  },\n  computed: {\n    rows() {\n      return this.products.length\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";AAsCA,OAAOA,QAAO,MAAO,iCAAiC;AACtD,OAAOC,SAAQ,MAAO,kCAAkC;AAExD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAAEH,QAAQ;IAAEC;EAAU,CAAC;EACnCG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CACN;QAAEC,GAAG,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,EAC1B;QAAED,GAAG,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC,EAChC;QAAED,GAAG,EAAE,aAAa;QAAEC,KAAK,EAAE;MAAc,CAAC,EAC5C;QAAED,GAAG,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAW,CAAC,EACtC;QAAED,GAAG,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EAClC;QAAED,GAAG,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAU,EACpC;MACDC,QAAQ,EAAE,CACR;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,WAAW;QAAEC,WAAW,EAAE,uBAAuB;QAAEC,QAAQ,EAAE,YAAY;QAAEC,MAAM,EAAE;MAAU,CAAC,EAC9G;QAAEJ,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,WAAW;QAAEC,WAAW,EAAE,uBAAuB;QAAEC,QAAQ,EAAE,YAAY;QAAEC,MAAM,EAAE;MAAS,CAAC,CAC9G;MACDC,aAAa,EAAE,CACb;QAAEC,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EACnC;QAAED,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAU,EACrC;MACDC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,CAAC,EAAE;IACjB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACF,SAAS,CAAC,CAAC;IACjC,CAAC;IACDG,aAAaA,CAACC,IAAI,EAAE;MAClB;MACA,IAAI,CAACN,UAAS,GAAI;QAAE,GAAGM;MAAK,CAAC;MAC7B,IAAI,CAACP,aAAY,GAAI,IAAI,EAAE;IAC7B,CAAC;IACDQ,cAAcA,CAAA,EAAG;MACf,IAAI,CAACR,aAAY,GAAI,KAAK;IAC5B,CAAC;IAEDS,gBAAgBA,CAACC,WAAW,EAAE;MAC5B;MACA,MAAMC,KAAI,GAAI,IAAI,CAACpB,QAAQ,CAACqB,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACrB,EAAC,KAAMkB,WAAW,CAAClB,EAAE,CAAC;MACnE,IAAImB,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAACpB,QAAQ,CAACuB,MAAM,CAACH,KAAK,EAAE,CAAC,EAAED,WAAW,CAAC;MAC7C;MACA;MACA,IAAI,CAACV,aAAY,GAAI,KAAK,EAAE;IAC9B,CAAC;IACDe,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACzB,QAAQ,CAAC0B,IAAI,CAACD,UAAU,CAAC;IAChC,CAAC;IACDE,aAAaA,CAAC1B,EAAE,EAAE;MAChB,IAAI,CAACD,QAAO,GAAI,IAAI,CAACA,QAAQ,CAAC4B,MAAM,CAACC,OAAM,IAAKA,OAAO,CAAC5B,EAAC,KAAMA,EAAE,CAAC;IACpE;EACF,CAAC;EACD6B,QAAQ,EAAE;IACRC,IAAIA,CAAA,EAAG;MACL,OAAO,IAAI,CAAC/B,QAAQ,CAACgC,MAAK;IAC5B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import AddModal from \"@/components/Modal/AddModal.vue\";\nimport EditModal from \"@/components/Modal/EditModal.vue\";\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'App',\n  components: {\n    AddModal,\n    EditModal\n  },\n  data() {\n    return {\n      fields: [{\n        key: 'id',\n        label: 'ID'\n      }, {\n        key: 'title',\n        label: 'Title'\n      }, {\n        key: 'description',\n        label: 'Description'\n      }, {\n        key: 'due_date',\n        label: 'Due Date'\n      }, {\n        key: 'status',\n        label: 'Status'\n      }, {\n        key: 'actions',\n        label: 'Actions'\n      }],\n      statusOptions: [{\n        value: 'active',\n        text: 'Active'\n      }, {\n        value: 'expired',\n        text: 'Expired'\n      }],\n      showEditModal: false,\n      editedItem: {}\n    };\n  },\n  computed: {\n    ...mapState({\n      products: state => state.products\n    })\n  },\n  methods: {\n    ...mapActions(['getProducts']),\n    showModal() {\n      this.$refs.addModal.showModal();\n    },\n    openEditModal(item) {\n      this.editedItem = {\n        ...item\n      };\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n    updateEditedItem(updatedItem) {\n      const index = this.products.findIndex(p => p.id === updatedItem.id);\n      if (index !== -1) {\n        this.$store.commit('SET_PRODUCTS', [...this.products.slice(0, index), updatedItem, ...this.products.slice(index + 1)]);\n      }\n      this.showEditModal = false;\n    },\n    addProduct(newProduct) {\n      this.$store.commit('ADD_PRODUCT', newProduct);\n    },\n    deleteProduct(id) {\n      this.$store.commit('SET_PRODUCTS', this.products.filter(product => product.id !== id));\n    }\n  },\n  created() {\n    this.getProducts();\n  }\n};","map":{"version":3,"names":["AddModal","EditModal","mapState","mapActions","name","components","data","fields","key","label","statusOptions","value","text","showEditModal","editedItem","computed","products","state","methods","showModal","$refs","addModal","openEditModal","item","closeEditModal","updateEditedItem","updatedItem","index","findIndex","p","id","$store","commit","slice","addProduct","newProduct","deleteProduct","filter","product","created","getProducts"],"sources":["C:\\xampp\\htdocs\\assessment_test\\ui\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <b-container>\n      <b-row class=\"mb-3\">\n        <b-col>\n          <h1>Product List</h1>\n          <b-button size=\"md\" variant=\"success\" class=\"float-end\" @click=\"showModal\">Add New Product</b-button>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <b-table striped hover :items=\"products\" :fields=\"fields\" :show-empty=\"products.length === 0\">\n            <template #cell(actions)=\"data\">\n              <b-button size=\"sm\" variant=\"primary\" @click=\"openEditModal(data.item)\" class=\"me-3\">Edit</b-button>\n              <b-button size=\"sm\" variant=\"danger\" @click=\"deleteProduct(data.item.id)\">Delete</b-button>\n            </template>\n            <template #empty>\n              <div class=\"text-center\">\n                Empty Data\n              </div>\n            </template>\n          </b-table>\n        </b-col>\n      </b-row>\n      <AddModal ref=\"addModal\" @add-product=\"addProduct\"/>\n      <EditModal\n          :editedItem=\"editedItem\"\n          :showEditModal=\"showEditModal\"\n          :statusOptions=\"statusOptions\"\n          @submit-edit=\"updateEditedItem\"\n          @cancel-edit=\"closeEditModal\"\n      />\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport AddModal from \"@/components/Modal/AddModal.vue\";\nimport EditModal from \"@/components/Modal/EditModal.vue\";\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'App',\n  components: { AddModal, EditModal },\n  data() {\n    return {\n      fields: [\n        { key: 'id', label: 'ID' },\n        { key: 'title', label: 'Title' },\n        { key: 'description', label: 'Description' },\n        { key: 'due_date', label: 'Due Date' },\n        { key: 'status', label: 'Status' },\n        { key: 'actions', label: 'Actions' }\n      ],\n      statusOptions: [\n        { value: 'active', text: 'Active' },\n        { value: 'expired', text: 'Expired' }\n      ],\n      showEditModal: false,\n      editedItem: {}\n    }\n  },\n  computed: {\n    ...mapState({\n      products: state => state.products\n    })\n  },\n  methods: {\n    ...mapActions(['getProducts']),\n    showModal() {\n      this.$refs.addModal.showModal();\n    },\n    openEditModal(item) {\n      this.editedItem = { ...item };\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n    updateEditedItem(updatedItem) {\n      const index = this.products.findIndex(p => p.id === updatedItem.id);\n      if (index !== -1) {\n        this.$store.commit('SET_PRODUCTS', [\n          ...this.products.slice(0, index),\n          updatedItem,\n          ...this.products.slice(index + 1)\n        ]);\n      }\n      this.showEditModal = false;\n    },\n    addProduct(newProduct) {\n      this.$store.commit('ADD_PRODUCT', newProduct);\n    },\n    deleteProduct(id) {\n      this.$store.commit('SET_PRODUCTS', this.products.filter(product => product.id !== id));\n    }\n  },\n  created() {\n    this.getProducts();\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":"AAqCA,OAAOA,QAAO,MAAO,iCAAiC;AACtD,OAAOC,SAAQ,MAAO,kCAAkC;AACxD,SAASC,QAAQ,EAAEC,UAAS,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAAEL,QAAQ;IAAEC;EAAU,CAAC;EACnCK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CACN;QAAEC,GAAG,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,EAC1B;QAAED,GAAG,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC,EAChC;QAAED,GAAG,EAAE,aAAa;QAAEC,KAAK,EAAE;MAAc,CAAC,EAC5C;QAAED,GAAG,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAW,CAAC,EACtC;QAAED,GAAG,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EAClC;QAAED,GAAG,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAU,EACpC;MACDC,aAAa,EAAE,CACb;QAAEC,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EACnC;QAAED,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAU,EACrC;MACDC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,CAAC;IACf;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGb,QAAQ,CAAC;MACVc,QAAQ,EAAEC,KAAI,IAAKA,KAAK,CAACD;IAC3B,CAAC;EACH,CAAC;EACDE,OAAO,EAAE;IACP,GAAGf,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC;IAC9BgB,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACF,SAAS,CAAC,CAAC;IACjC,CAAC;IACDG,aAAaA,CAACC,IAAI,EAAE;MAClB,IAAI,CAACT,UAAS,GAAI;QAAE,GAAGS;MAAK,CAAC;MAC7B,IAAI,CAACV,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDW,cAAcA,CAAA,EAAG;MACf,IAAI,CAACX,aAAY,GAAI,KAAK;IAC5B,CAAC;IACDY,gBAAgBA,CAACC,WAAW,EAAE;MAC5B,MAAMC,KAAI,GAAI,IAAI,CAACX,QAAQ,CAACY,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMJ,WAAW,CAACI,EAAE,CAAC;MACnE,IAAIH,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAACI,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,CACjC,GAAG,IAAI,CAAChB,QAAQ,CAACiB,KAAK,CAAC,CAAC,EAAEN,KAAK,CAAC,EAChCD,WAAW,EACX,GAAG,IAAI,CAACV,QAAQ,CAACiB,KAAK,CAACN,KAAI,GAAI,CAAC,EACjC,CAAC;MACJ;MACA,IAAI,CAACd,aAAY,GAAI,KAAK;IAC5B,CAAC;IACDqB,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACJ,MAAM,CAACC,MAAM,CAAC,aAAa,EAAEG,UAAU,CAAC;IAC/C,CAAC;IACDC,aAAaA,CAACN,EAAE,EAAE;MAChB,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAChB,QAAQ,CAACqB,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACR,EAAC,KAAMA,EAAE,CAAC,CAAC;IACxF;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from './axiosConfig';\nclass AuthService {\n  async register(user) {\n    try {\n      const response = await axios.post(`/api/register`, user);\n      return response.data;\n    } catch (error) {\n      console.error('Error registering:', error);\n      throw error;\n    }\n  }\n  async login(credentials) {\n    try {\n      const response = await axios.post(`/api/login`, credentials);\n      if (response.data.token) {\n        this.setToken(response.data.token);\n        this.setUser(response.data.user);\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error logging in:', error);\n      throw error;\n    }\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  async logout() {\n    try {\n      await axios.post(`/api/logout`);\n      this.removeToken();\n      this.removeUser();\n    } catch (error) {\n      console.error('Error logging out:', error);\n      throw error;\n    }\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  removeToken() {\n    localStorage.removeItem('token');\n  }\n  setUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  getUser() {\n    const user = localStorage.getItem('user');\n    try {\n      return user ? JSON.parse(user) : null;\n    } catch (error) {\n      console.error('Error parsing user JSON:', error);\n      return null;\n    }\n  }\n  removeUser() {\n    localStorage.removeItem('user');\n  }\n  isAuthenticated() {\n    const token = this.getToken();\n    return !!token;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","AuthService","register","user","response","post","data","error","console","login","credentials","token","setToken","setUser","localStorage","setItem","logout","removeToken","removeUser","getToken","getItem","removeItem","JSON","stringify","getUser","parse","isAuthenticated"],"sources":["C:/xampp/htdocs/assessment_test/ui/AuthService.js"],"sourcesContent":["import axios from './axiosConfig';\r\n\r\nclass AuthService {\r\n    async register(user) {\r\n        try {\r\n            const response = await axios.post(`/api/register`, user);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error registering:', error);\r\n            throw error;\r\n        }\r\n    }\r\n    async login(credentials) {\r\n        try {\r\n            const response = await axios.post(`/api/login`, credentials);\r\n            if (response.data.token) {\r\n                this.setToken(response.data.token);\r\n                this.setUser(response.data.user);\r\n            }\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error logging in:', error);\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    setToken(token) {\r\n        localStorage.setItem('token', token);\r\n    }\r\n\r\n    async logout() {\r\n        try {\r\n            await axios.post(`/api/logout`);\r\n            this.removeToken();\r\n            this.removeUser();\r\n        } catch (error) {\r\n            console.error('Error logging out:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setToken(token) {\r\n        localStorage.setItem('token', token);\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    removeToken() {\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    setUser(user) {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n\r\n    getUser() {\r\n        const user = localStorage.getItem('user');\r\n        try {\r\n            return user ? JSON.parse(user) : null;\r\n        } catch (error) {\r\n            console.error('Error parsing user JSON:', error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    removeUser() {\r\n        localStorage.removeItem('user');\r\n    }\r\n\r\n    isAuthenticated() {\r\n        const token = this.getToken();\r\n        return !!token;\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,eAAe;AAEjC,MAAMC,WAAW,CAAC;EACd,MAAMC,QAAQA,CAACC,IAAI,EAAE;IACjB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,eAAc,EAAEF,IAAI,CAAC;MACxD,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACf;EACJ;EACA,MAAME,KAAKA,CAACC,WAAW,EAAE;IACrB,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,YAAW,EAAEK,WAAW,CAAC;MAC5D,IAAIN,QAAQ,CAACE,IAAI,CAACK,KAAK,EAAE;QACrB,IAAI,CAACC,QAAQ,CAACR,QAAQ,CAACE,IAAI,CAACK,KAAK,CAAC;QAClC,IAAI,CAACE,OAAO,CAACT,QAAQ,CAACE,IAAI,CAACH,IAAI,CAAC;MACpC;MACA,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK;IACf;EACJ;EAEAK,QAAQA,CAACD,KAAK,EAAE;IACZG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;EACxC;EAEA,MAAMK,MAAMA,CAAA,EAAG;IACX,IAAI;MACA,MAAMhB,KAAK,CAACK,IAAI,CAAE,aAAY,CAAC;MAC/B,IAAI,CAACY,WAAW,CAAC,CAAC;MAClB,IAAI,CAACC,UAAU,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACf;EACJ;EAEAK,QAAQA,CAACD,KAAK,EAAE;IACZG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;EACxC;EAEAQ,QAAQA,CAAA,EAAG;IACP,OAAOL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EACxC;EAEAH,WAAWA,CAAA,EAAG;IACVH,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;EACpC;EAEAR,OAAOA,CAACV,IAAI,EAAE;IACVW,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEO,IAAI,CAACC,SAAS,CAACpB,IAAI,CAAC,CAAC;EACtD;EAEAqB,OAAOA,CAAA,EAAG;IACN,MAAMrB,IAAI,GAAGW,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC;IACzC,IAAI;MACA,OAAOjB,IAAI,GAAGmB,IAAI,CAACG,KAAK,CAACtB,IAAI,CAAC,GAAG,IAAI;IACzC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO,IAAI;IACf;EACJ;EAEAW,UAAUA,CAAA,EAAG;IACTJ,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;EACnC;EAEAK,eAAeA,CAAA,EAAG;IACd,MAAMf,KAAK,GAAG,IAAI,CAACQ,QAAQ,CAAC,CAAC;IAC7B,OAAO,CAAC,CAACR,KAAK;EAClB;AACJ;AAEA,eAAe,IAAIV,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
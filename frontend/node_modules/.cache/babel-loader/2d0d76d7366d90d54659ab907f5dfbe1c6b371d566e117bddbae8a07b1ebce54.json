{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from '../axiosConfig';\nconst store = createStore({\n  state: {\n    products: [],\n    videos: []\n  },\n  mutations: {\n    SET_VIDEOS(state, videos) {\n      state.videos = videos;\n    },\n    ADD_VIDEO(state, video) {\n      state.videos.push(video);\n    },\n    DELETE_VIDEO(state, videoId) {\n      state.videos = state.videos.filter(video => video.id !== videoId);\n    }\n  },\n  actions: {\n    async fetchVideos({\n      commit\n    }) {\n      const response = await axios.get('/api/videos');\n      commit('SET_VIDEOS', response.data);\n    },\n    async uploadVideo({\n      commit\n    }, formData) {\n      const response = await axios.post('/api/videos', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      commit('ADD_VIDEO', response.data);\n    },\n    async deleteVideo({\n      commit\n    }, videoId) {\n      await axios.delete(`/api/videos/${videoId}`);\n      commit('DELETE_VIDEO', videoId);\n    }\n  },\n  modules: {}\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","products","videos","mutations","SET_VIDEOS","ADD_VIDEO","video","push","DELETE_VIDEO","videoId","filter","id","actions","fetchVideos","commit","response","get","data","uploadVideo","formData","post","headers","deleteVideo","delete","modules"],"sources":["C:/xampp/htdocs/assessment_test/ui/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from '../axiosConfig';\r\n\r\nconst store = createStore({\r\n    state: {\r\n        products: [],\r\n        videos: []\r\n    },\r\n    mutations: {\r\n        SET_VIDEOS(state, videos) {\r\n            state.videos = videos;\r\n        },\r\n        ADD_VIDEO(state, video) {\r\n            state.videos.push(video);\r\n        },\r\n        DELETE_VIDEO(state, videoId) {\r\n            state.videos = state.videos.filter(video => video.id !== videoId);\r\n        }\r\n    },\r\n    actions: {\r\n        async fetchVideos({ commit }) {\r\n            const response = await axios.get('/api/videos');\r\n            commit('SET_VIDEOS', response.data);\r\n        },\r\n        async uploadVideo({ commit }, formData) {\r\n            const response = await axios.post('/api/videos', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            commit('ADD_VIDEO', response.data);\r\n        },\r\n        async deleteVideo({ commit }, videoId) {\r\n            await axios.delete(`/api/videos/${videoId}`);\r\n            commit('DELETE_VIDEO', videoId);\r\n        }\r\n    },\r\n    modules: {\r\n \r\n    }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,gBAAgB;AAElC,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,KAAK,EAAE;IACHC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACZ,CAAC;EACDC,SAAS,EAAE;IACPC,UAAUA,CAACJ,KAAK,EAAEE,MAAM,EAAE;MACtBF,KAAK,CAACE,MAAM,GAAGA,MAAM;IACzB,CAAC;IACDG,SAASA,CAACL,KAAK,EAAEM,KAAK,EAAE;MACpBN,KAAK,CAACE,MAAM,CAACK,IAAI,CAACD,KAAK,CAAC;IAC5B,CAAC;IACDE,YAAYA,CAACR,KAAK,EAAES,OAAO,EAAE;MACzBT,KAAK,CAACE,MAAM,GAAGF,KAAK,CAACE,MAAM,CAACQ,MAAM,CAACJ,KAAK,IAAIA,KAAK,CAACK,EAAE,KAAKF,OAAO,CAAC;IACrE;EACJ,CAAC;EACDG,OAAO,EAAE;IACL,MAAMC,WAAWA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC1B,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,aAAa,CAAC;MAC/CF,MAAM,CAAC,YAAY,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACvC,CAAC;IACD,MAAMC,WAAWA,CAAC;MAAEJ;IAAO,CAAC,EAAEK,QAAQ,EAAE;MACpC,MAAMJ,QAAQ,GAAG,MAAMjB,KAAK,CAACsB,IAAI,CAAC,aAAa,EAAED,QAAQ,EAAE;QACvDE,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFP,MAAM,CAAC,WAAW,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC;IACD,MAAMK,WAAWA,CAAC;MAAER;IAAO,CAAC,EAAEL,OAAO,EAAE;MACnC,MAAMX,KAAK,CAACyB,MAAM,CAAE,eAAcd,OAAQ,EAAC,CAAC;MAC5CK,MAAM,CAAC,cAAc,EAAEL,OAAO,CAAC;IACnC;EACJ,CAAC;EACDe,OAAO,EAAE,CAET;AACJ,CAAC,CAAC;AAEF,eAAezB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}